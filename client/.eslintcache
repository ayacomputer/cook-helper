[{"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js":"1","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js":"2","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx":"3","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx":"4","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx":"5","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js":"6","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js":"7","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx":"8","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js":"9","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js":"10","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx":"11","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/NavBar.jsx":"12"},{"size":219,"mtime":1651734237683,"results":"13","hashOfConfig":"14"},{"size":1630,"mtime":1651987067889,"results":"15","hashOfConfig":"14"},{"size":117,"mtime":1651919816087,"results":"16","hashOfConfig":"14"},{"size":6101,"mtime":1651984618151,"results":"17","hashOfConfig":"14"},{"size":6088,"mtime":1651984770134,"results":"18","hashOfConfig":"14"},{"size":1936,"mtime":1651994441439,"results":"19","hashOfConfig":"14"},{"size":1170,"mtime":1651987516032,"results":"20","hashOfConfig":"14"},{"size":2664,"mtime":1651986850273,"results":"21","hashOfConfig":"14"},{"size":812,"mtime":1651994230095,"results":"22","hashOfConfig":"14"},{"size":891,"mtime":1651996048380,"results":"23","hashOfConfig":"14"},{"size":5201,"mtime":1652013392727,"results":"24","hashOfConfig":"14"},{"size":5633,"mtime":1652013318912,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rhg1o1",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js",[],["54","55"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx",["56","57"],"import React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport { Link } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Alert } from '@mui/material';\n\nimport Auth from '../utils/auth';\nimport { USER_LOGIN } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\n\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://github.com/ayacomputer\">\n                Cook Helper\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createTheme();\n\nexport default function Login() {\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [userLogin, { error }] = useMutation(USER_LOGIN);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        console.log(event.target)\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const { data } = await userLogin({\n                variables: { ...userFormData },\n            });\n            Auth.login(data.login.token);\n            console.log(data.login.token)\n        } catch (err) {\n            console.error(err);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\n                <CssBaseline />\n                <Grid\n                    item\n                    xs={false}\n                    sm={4}\n                    md={7}\n                    sx={{\n                        backgroundImage: 'url(https://source.unsplash.com/random)',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundColor: (t) =>\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center',\n                    }}\n                />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <Box\n                        sx={{\n                            my: 8,\n                            mx: 4,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <Box component=\"form\" noValidate validated={validated} onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                            <Alert dismissible=\"true\" onClose={() => setShowAlert(false)} variant='danger'>\n                                Something went wrong with your login credentials!\n                            </Alert>\n                            <TextField\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                label=\"email\"\n                                type=\"email\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={handleInputChange}\n                                value={userFormData.email}\n                                autoFocus\n                            />\n                            <TextField\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={handleInputChange}\n                                value={userFormData.password}\n                                autoComplete=\"current-password\"\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link href=\"/signup\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                            <Copyright sx={{ mt: 5 }} />\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx",["58","59"],"import React, { useState } from 'react';\nimport { CREATE_USER } from '../utils/mutations'\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Alert } from '@mui/material';\n\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://github.com/ayacomputer\">\n                Cook Helper\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n    const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [createUser, { error }] = useMutation(CREATE_USER);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        console.log(event.target)\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const { data } = await createUser(\n                { variables: { ...userFormData } });\n            Auth.login(data.createUser.token);\n            console.log(data.createUser.token)\n        } catch (error) {\n            console.error(error);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Box component=\"form\" noValidate validated={validated} onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                        <Alert dismissible=\"true\" onClose={() => setShowAlert(false)} variant='danger'>\n                            Something went wrong with your signup!\n                        </Alert>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"username\"\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.username}\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.email}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.password}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n                <Copyright sx={{ mt: 5 }} />\n            </Container>\n        </ThemeProvider>\n    );\n}","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx",["60","61"],"import * as React from 'react';\n\nimport Auth from '../utils/auth';\nimport { removeRecipeId } from '../utils/localStorage';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { REMOVE_RECIPE } from '../utils/mutations';\nimport { Button, Card, Container } from '@mui/material';\n\nconst Cooking = () => {\n    const { loading, data } = useQuery(QUERY_ME);\n    const [removeRecipe, { error }] = useMutation(REMOVE_RECIPE);\n    const userData = data?.me || {};\n\n    const handleRemoveRecipe = async (recipeId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            const { data } = await removeRecipe({\n                variables: { recipeId },\n            });\n\n            removeRecipeId(recipeId);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    return (\n        <>\n            <Container fluid className='text-light bg-dark'>\n                <Container>\n                    <h1>Today's Meal</h1>\n                </Container>\n            </Container>\n            <Container>\n                <h2>\n                    {userData.savedBooks.length\n                        ? `Viewing ${userData.savedRecipes.length} saved ${userData.savedRecipes.length === 1 ? 'recipe' : 'recipes'}:`\n                        : 'You have not chosen any recipe yet!'}\n                </h2>\n                <Card>\n                    {userData.savedRecipes.map((recipe) => {\n                        return (\n                            <Card key={recipe._id} border='dark'>\n                                {recipe.image ? <Card.Img src={recipe.image} alt={`The photo for ${recipe.name}`} variant='top' /> : null}\n                                <Card.Body>\n                                    <Card.Title>{recipe.name}</Card.Title>\n                                    {recipe.steps.map((step) => {\n                                        return (\n                                            <p>{step}</p>\n                                        )\n                                    })}\n                                    <Button className='btn-block btn-danger' onClick={() => handleRemoveRecipe(recipe._id)}>\n                                        Remove this Recipe!\n                                    </Button>\n                                </Card.Body>\n                            </Card>\n                        );\n                    })}\n                </Card>\n            </Container>\n        </>\n    );\n};\n\nexport default Cooking;","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx",["62","63"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/NavBar.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":37,"column":12,"nodeType":"70","messageId":"71","endLine":37,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":38,"column":25,"nodeType":"70","messageId":"71","endLine":38,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":36,"column":12,"nodeType":"70","messageId":"71","endLine":36,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":37,"column":26,"nodeType":"70","messageId":"71","endLine":37,"endColumn":31},{"ruleId":"68","severity":1,"message":"72","line":12,"column":28,"nodeType":"70","messageId":"71","endLine":12,"endColumn":33},{"ruleId":"68","severity":1,"message":"73","line":23,"column":21,"nodeType":"70","messageId":"71","endLine":23,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":37,"column":21,"nodeType":"70","messageId":"71","endLine":37,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":53,"column":21,"nodeType":"70","messageId":"71","endLine":53,"endColumn":25},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'showAlert' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]