[{"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js":"1","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js":"2","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx":"3","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx":"4","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx":"5","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js":"6","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js":"7","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx":"8","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js":"9","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx":"10","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx":"11","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx":"12","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx":"13","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js":"14","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx":"15","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx":"16","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx":"17","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/editRecipe.jsx":"18"},{"size":219,"mtime":1651734237683,"results":"19","hashOfConfig":"20"},{"size":1776,"mtime":1652502034233,"results":"21","hashOfConfig":"20"},{"size":6229,"mtime":1652614124445,"results":"22","hashOfConfig":"20"},{"size":4743,"mtime":1652625825217,"results":"23","hashOfConfig":"20"},{"size":5776,"mtime":1652627959668,"results":"24","hashOfConfig":"20"},{"size":1742,"mtime":1652505639322,"results":"25","hashOfConfig":"20"},{"size":1170,"mtime":1651987516032,"results":"26","hashOfConfig":"20"},{"size":7269,"mtime":1652651054081,"results":"27","hashOfConfig":"20"},{"size":849,"mtime":1652186744061,"results":"28","hashOfConfig":"20"},{"size":6048,"mtime":1652650815594,"results":"29","hashOfConfig":"20"},{"size":215,"mtime":1652491301206,"results":"30","hashOfConfig":"20"},{"size":2358,"mtime":1652599183524,"results":"31","hashOfConfig":"20"},{"size":1751,"mtime":1652514225279,"results":"32","hashOfConfig":"20"},{"size":762,"mtime":1652572637168,"results":"33","hashOfConfig":"20"},{"size":5785,"mtime":1652650520465,"results":"34","hashOfConfig":"20"},{"size":5992,"mtime":1652427085757,"results":"35","hashOfConfig":"20"},{"size":1564,"mtime":1652092159278,"results":"36","hashOfConfig":"20"},{"size":13004,"mtime":1652650022769,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rhg1o1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js",[],["76","77"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx",["78"],"import { Box, TextField, Typography, Container, Button, Card, FormGroup, Grid } from '@mui/material';\nimport React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\nimport NavBar from '../components/NavBar';\nimport { CREATE_RECIPE } from '../utils/mutations';\nimport IngredientForm from '../components/ingredientForm';\nimport StepsForm from '../components/stepsForm';\nimport { useNavigate } from \"react-router-dom\";\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\nimport Fab from '@mui/material/Fab';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\n\n\n\nexport default function CreateRecipe() {\n    const [CreateRecipe] = useMutation(CREATE_RECIPE);\n    const [recipeFields, setRecipeFields] = useState([\n        { image: '', name: '', serves: '' },\n    ]);\n    const [ingredientsFields, setIngredientsFields] = useState([\n        { name: '', qty: '' },\n    ]);\n    const [stepsFields, setStepsFields] = useState([\n        { step: '' },\n    ])\n\n    const imageUrl = useRef('');\n    const navigate = useNavigate();\n\n\n\n    const myWidget = window.cloudinary?.createUploadWidget({\n        cloudName: 'ayacomputer',\n        uploadPreset: 'cook_helper',\n        multiple: false,\n    }, (error, result) => {\n        if (!error && result && result.event === \"success\") {\n            console.log('Done! Here is the image info: ', result.info);\n            imageUrl.current = result.info.url;\n        }\n    }\n    )\n\n    const openCloudinaryWidget = () => {\n        myWidget.open();\n    }\n\n\n    const handleRecipeFormChange = (event, index) => {\n        let data = [...recipeFields];\n        data[index || 0][event.target.name] = event.target.value;\n\n        setRecipeFields(data);\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(event.target.value);\n        console.log(\"data-------\", ...recipeFields, stepsFields, ingredientsFields);\n\n        try {\n            await CreateRecipe({\n                variables: {\n                    input: {\n                        ...recipeFields[0],\n                        totalTime: Number(recipeFields[0].totalTime),\n                        image: imageUrl.current,\n                        serves: Number(recipeFields[0].serves),\n                        steps: stepsFields.map((s) => s.step),\n                        ingredients: ingredientsFields\n                    }\n                }\n            });\n\n            setRecipeFields([{ image: '', name: '', serves: '' },]);\n            setIngredientsFields([{ name: '', qty: '' },]);\n            setStepsFields([{ step: '' },]);\n\n\n            // redirect to /recipes\n            navigate('/recipes');\n\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const numberForms = [\n        {\n            label: \"Total Time (mins)\",\n            name: \"totalTime\",\n            id: \"totalTime\",\n        },\n        {\n\n            label: \"Serves\",\n            name: \"serves\",\n            id: \"serves\",\n        }\n    ]\n    return (\n        <>\n            <NavBar />\n            <Box style={{ padding: \"3rem\" }}>\n                <h3>Create Recipe</h3>\n            </Box>\n            <Card style={{ padding: \"3rem\" }}>\n                <FormGroup>\n                    <Container component=\"main\">\n\n                        <Grid container sx={{\n                            marginTop: 1,\n                            flexDirection: 'column',\n                        }}>\n                            <Grid item xs={12}>\n                                <Grid xs={12}>\n                                    <Fab variant=\"extended\" onClick={openCloudinaryWidget}><AddAPhotoIcon sx={{ mr: 1 }} />Upload Image</Fab>\n                                </Grid>\n                                <Typography variant=\"h5\" style={{ textAlign: \"left\" }} >Recipe Name :</Typography>\n                                <TextField\n                                    required\n                                    id=\"name\"\n                                    name=\"name\"\n                                    label=\"Recipe Name\"\n                                    type=\"text\"\n                                    onChange={event => handleRecipeFormChange(event)}\n                                    size=\"standard\"\n                                    fullWidth\n                                    autoFocus\n                                    style={{ padding: \"0.3em\" }}\n                                />\n\n\n                                <Grid>\n                                    {numberForms.map((numForm, i) => (\n                                        <TextField\n                                            key={numForm.id}\n                                            required\n                                            id={numForm.id}\n                                            name={numForm.name}\n                                            label={numForm.label}\n                                            type=\"number\"\n                                            onChange={event => handleRecipeFormChange(event)}\n                                            size=\"standard\"\n                                            autoFocus\n                                            style={{ padding: \"0.3em\" }}\n                                        />\n\n                                    ))}\n                                </Grid>\n\n                            </Grid>\n\n\n                            <Grid item xs={12} md={12}>\n                                <IngredientForm setIngredients={setIngredientsFields} ingredients={ingredientsFields} />\n                                <StepsForm setSteps={setStepsFields} steps={stepsFields} />\n                            </Grid>\n\n\n                        </Grid>\n\n\n\n                        <Fab\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"extended\"\n                            sx={{ mt: 3, mb: 2 }}\n                            onClick={event => handleFormSubmit(event)}><LibraryAddIcon sx={{ mr: 1 }} />Save this Recipe!</Fab>\n                    </Container>\n                </FormGroup>\n            </Card>\n\n\n\n        </>\n\n    );\n};","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx",["79","80","81","82","83"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx",["84","85"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/editRecipe.jsx",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":49,"nodeType":"93","messageId":"94","endLine":1,"endColumn":55},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":7,"column":35,"nodeType":"93","messageId":"94","endLine":7,"endColumn":49},{"ruleId":"91","severity":1,"message":"97","line":7,"column":62,"nodeType":"93","messageId":"94","endLine":7,"endColumn":71},{"ruleId":"91","severity":1,"message":"98","line":7,"column":132,"nodeType":"93","messageId":"94","endLine":7,"endColumn":148},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"100","line":1,"column":80,"nodeType":"93","messageId":"94","endLine":1,"endColumn":90},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CardActionArea' is defined but never used.","'Container' is defined but never used.","'AccordionActions' is defined but never used.","'useEffect' is defined but never used.","'ButtonBase' is defined but never used.","no-global-assign","no-unsafe-negation"]