[{"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js":"1","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js":"2","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx":"3","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx":"4","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx":"5","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js":"6","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js":"7","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx":"8","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js":"9","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js":"10","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx":"11","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/NavBar.jsx":"12","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx":"13","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/Footer.jsx":"14","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx":"15","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx":"16","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js":"17"},{"size":219,"mtime":1651734237683,"results":"18","hashOfConfig":"19"},{"size":1506,"mtime":1652099641869,"results":"20","hashOfConfig":"19"},{"size":3462,"mtime":1652273541588,"results":"21","hashOfConfig":"19"},{"size":4448,"mtime":1652093590942,"results":"22","hashOfConfig":"19"},{"size":5663,"mtime":1652101562853,"results":"23","hashOfConfig":"19"},{"size":1474,"mtime":1652186762347,"results":"24","hashOfConfig":"19"},{"size":1170,"mtime":1651987516032,"results":"25","hashOfConfig":"19"},{"size":5184,"mtime":1652264631476,"results":"26","hashOfConfig":"19"},{"size":849,"mtime":1652186744061,"results":"27","hashOfConfig":"19"},{"size":891,"mtime":1651996048380,"results":"28","hashOfConfig":"19"},{"size":5810,"mtime":1652267434631,"results":"29","hashOfConfig":"19"},{"size":5633,"mtime":1652089959475,"results":"30","hashOfConfig":"19"},{"size":203,"mtime":1652088337079,"results":"31","hashOfConfig":"19"},{"size":1564,"mtime":1652092159278,"results":"32","hashOfConfig":"19"},{"size":2514,"mtime":1652271061603,"results":"33","hashOfConfig":"19"},{"size":1926,"mtime":1652255949317,"results":"34","hashOfConfig":"19"},{"size":700,"mtime":1652261016638,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rhg1o1",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js",[],["74","75"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx",["76","77","78","79"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx",["80"],"import React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport { Container, Link } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { Alert } from '@mui/material';\n\nimport Auth from '../utils/auth';\nimport { USER_LOGIN } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\n\n\nconst theme = createTheme();\n\nexport default function Login() {\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [userLogin] = useMutation(USER_LOGIN);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        console.log(event.target)\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const { data } = await userLogin({\n                variables: { ...userFormData },\n            });\n            Auth.login(data.login.token);\n            console.log(data.login.token)\n        } catch (err) {\n            console.error(err);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit} validated={validated} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={handleInputChange}\n                            value={userFormData.email}\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={handleInputChange}\n                            value={userFormData.password}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href=\"/signup\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n}\n","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx",["81"],"import React, { useState } from 'react';\nimport { CREATE_USER } from '../utils/mutations'\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Alert } from '@mui/material';\n\n\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n    const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [createUser] = useMutation(CREATE_USER);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        console.log(event.target)\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const { data } = await createUser(\n                { variables: { ...userFormData } });\n            Auth.login(data.createUser.token);\n            console.log(data.createUser.token)\n        } catch (error) {\n            console.error(error);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Box component=\"form\" noValidate validated={validated} onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                        <Alert dismissible=\"true\" onClose={() => setShowAlert(false)} variant='danger'>\n                            Something went wrong with your signup!\n                        </Alert>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"username\"\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.username}\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.email}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    onChange={handleInputChange}\n                                    value={userFormData.password}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js",[],["82","83"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx",["84","85","86","87"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/NavBar.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/Footer.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":57,"nodeType":"94","messageId":"95","endLine":1,"endColumn":61},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":23},{"ruleId":"92","severity":1,"message":"98","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":19},{"ruleId":"92","severity":1,"message":"99","line":24,"column":12,"nodeType":"94","messageId":"95","endLine":24,"endColumn":21},{"ruleId":"92","severity":1,"message":"99","line":25,"column":12,"nodeType":"94","messageId":"95","endLine":25,"endColumn":21},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"102","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"103","line":21,"column":12,"nodeType":"94","messageId":"95","endLine":21,"endColumn":23},{"ruleId":"92","severity":1,"message":"104","line":21,"column":25,"nodeType":"94","messageId":"95","endLine":21,"endColumn":39},{"ruleId":"92","severity":1,"message":"105","line":47,"column":21,"nodeType":"94","messageId":"95","endLine":47,"endColumn":25},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'CREATE_RECIPE' is defined but never used.","'CssBaseline' is defined but never used.","'showAlert' is assigned a value but never used.",["106"],["107"],"'useEffect' is defined but never used.","'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]