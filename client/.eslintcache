[{"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js":"1","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js":"2","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx":"3","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx":"4","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx":"5","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js":"6","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js":"7","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx":"8","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js":"9","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx":"10","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx":"11","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx":"12","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx":"13","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js":"14","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx":"15","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx":"16","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx":"17","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/editRecipe.jsx":"18"},{"size":219,"mtime":1651734237683,"results":"19","hashOfConfig":"20"},{"size":1776,"mtime":1652502034233,"results":"21","hashOfConfig":"20"},{"size":6107,"mtime":1652584338595,"results":"22","hashOfConfig":"20"},{"size":4744,"mtime":1652532873753,"results":"23","hashOfConfig":"20"},{"size":5776,"mtime":1652533055808,"results":"24","hashOfConfig":"20"},{"size":1742,"mtime":1652505639322,"results":"25","hashOfConfig":"20"},{"size":1170,"mtime":1651987516032,"results":"26","hashOfConfig":"20"},{"size":6736,"mtime":1652576502364,"results":"27","hashOfConfig":"20"},{"size":849,"mtime":1652186744061,"results":"28","hashOfConfig":"20"},{"size":5614,"mtime":1652501801082,"results":"29","hashOfConfig":"20"},{"size":215,"mtime":1652491301206,"results":"30","hashOfConfig":"20"},{"size":2358,"mtime":1652511982151,"results":"31","hashOfConfig":"20"},{"size":1751,"mtime":1652514225279,"results":"32","hashOfConfig":"20"},{"size":762,"mtime":1652572637168,"results":"33","hashOfConfig":"20"},{"size":5649,"mtime":1652577377801,"results":"34","hashOfConfig":"20"},{"size":5992,"mtime":1652427085757,"results":"35","hashOfConfig":"20"},{"size":1564,"mtime":1652092159278,"results":"36","hashOfConfig":"20"},{"size":13284,"mtime":1652595910290,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rhg1o1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js",[],["78","79"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx",["80"],"import { Box, TextField, Typography, Container, Button, Card, FormGroup, Grid } from '@mui/material';\nimport React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\nimport NavBar from '../components/NavBar';\nimport { CREATE_RECIPE } from '../utils/mutations';\nimport IngredientForm from '../components/ingredientForm';\nimport StepsForm from '../components/stepsForm';\nimport { useNavigate } from \"react-router-dom\";\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\nimport Fab from '@mui/material/Fab';\n\n\nexport default function CreateRecipe() {\n    const [CreateRecipe] = useMutation(CREATE_RECIPE);\n    const [recipeFields, setRecipeFields] = useState([\n        { image: '', name: '', serves: '' },\n    ]);\n    const [ingredientsFields, setIngredientsFields] = useState([\n        { name: '', qty: '' },\n    ]);\n    const [stepsFields, setStepsFields] = useState([\n        { step: '' },\n    ])\n\n    const imageUrl = useRef('');\n    const navigate = useNavigate();\n\n\n\n    const myWidget = window.cloudinary?.createUploadWidget({\n        cloudName: 'ayacomputer',\n        uploadPreset: 'cook_helper',\n        multiple: false,\n    }, (error, result) => {\n        if (!error && result && result.event === \"success\") {\n            console.log('Done! Here is the image info: ', result.info);\n            imageUrl.current = result.info.url;\n        }\n    }\n    )\n\n    const openCloudinaryWidget = () => {\n        myWidget.open();\n    }\n\n\n    const handleRecipeFormChange = (event, index) => {\n        let data = [...recipeFields];\n        data[index || 0][event.target.name] = event.target.value;\n\n        setRecipeFields(data);\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(event.target.value);\n        console.log(\"data-------\", ...recipeFields, stepsFields, ingredientsFields);\n\n        try {\n            await CreateRecipe({\n                variables: {\n                    input: {\n                        ...recipeFields[0],\n                        totalTime: Number(recipeFields[0].totalTime),\n                        image: imageUrl.current,\n                        serves: Number(recipeFields[0].serves),\n                        steps: stepsFields.map((s) => s.step),\n                        ingredients: ingredientsFields\n                    }\n                }\n            });\n\n            setRecipeFields([{ image: '', name: '', serves: '' },]);\n            setIngredientsFields([{ name: '', qty: '' },]);\n            setStepsFields([{ step: '' },]);\n\n\n            // redirect to /recipes\n            navigate('/recipes');\n\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const numberForms = [\n        {\n            label: \"Total Time (mins)\",\n            name: \"totalTime\",\n            id: \"totalTime\",\n        },\n        {\n\n            label: \"Serves\",\n            name: \"serves\",\n            id: \"serves\",\n        }\n    ]\n    return (\n        <>\n            <NavBar />\n            <Card style={{ padding: \"3rem\" }}>\n                <h3>Create Recipe</h3>\n                <FormGroup>\n                    <Container component=\"main\">\n                        <Box sx={{\n                            marginTop: 3,\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }} style={{ padding: \"0.2em\" }}>\n                            <Grid container>\n                                <Grid item xs={12} md={12}>\n                                    <TextField\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Recipe Name\"\n                                        type=\"text\"\n                                        onChange={event => handleRecipeFormChange(event)}\n                                        size=\"standard\"\n                                        fullWidth\n                                        autoFocus\n                                        style={{ padding: \"0.3em\" }}\n                                    />\n                                    <Grid xs={12} md={12}>\n                                        <Fab variant=\"extended\" onClick={openCloudinaryWidget}><AddAPhotoIcon sx={{ mr: 1 }} />Upload Image</Fab>\n                                    </Grid>\n                                    {numberForms.map((numForm, i) => (\n                                        <TextField\n                                            key={numForm.id}\n                                            required\n                                            id={numForm.id}\n                                            name={numForm.name}\n                                            label={numForm.label}\n                                            type=\"number\"\n                                            onChange={event => handleRecipeFormChange(event)}\n                                            size=\"standard\"\n                                            autoFocus\n                                            style={{ padding: \"0.3em\" }}\n                                        />\n\n                                    ))}\n                                </Grid>\n\n\n                                <Grid item xs={12} md={12}>\n                                    <IngredientForm setIngredients={setIngredientsFields} ingredients={ingredientsFields} />\n                                    <StepsForm setSteps={setStepsFields} steps={stepsFields} />\n                                </Grid>\n\n\n                            </Grid>\n\n                        </Box>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            onClick={event => handleFormSubmit(event)}>Save</Button>\n                    </Container>\n                </FormGroup>\n            </Card>\n\n\n\n        </>\n\n    );\n};","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx",["81","82","83","84","85"],"import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME, GET_RECIPES_BY_IDS } from '../utils/queries';\nimport { REMOVE_RECIPE } from '../utils/mutations';\nimport { Button, Box, Grid, Card, CardActionArea, CardMedia, Container, Typography, Accordion, AccordionSummary, AccordionDetails, AccordionActions, Fab } from '@mui/material';\nimport NavBar from '../components/NavBar';\nimport { styles } from '../utils/style';\nimport { useNavigate } from 'react-router-dom';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nconst Cooking = () => {\n    const meData = useQuery(QUERY_ME);\n    const navigate = useNavigate();\n\n    const [removeRecipeId] = useMutation(REMOVE_RECIPE);\n    const userData = meData.data?.me || {};\n    const selectedRecipeIds = userData.selectedRecipeIds || [];\n\n    console.log(\"-----selectedRecipesIds : \", selectedRecipeIds)\n    console.log(\"-----userData\", userData)\n\n    let results = useQuery(GET_RECIPES_BY_IDS, { variables: { id: selectedRecipeIds } })\n    let recipes = results?.data?.getRecipesByIds || [];\n\n\n\n    console.log(\"---------recipes:\", recipes)\n    const loading = meData.loading || results.loading;\n\n    const handleRemoveRecipe = async (recipeId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            await removeRecipeId({\n                variables: { id: recipeId }\n            });\n\n            await meData.refetch();\n            await results.refetch();\n\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n    const handleBackToRecipes = () => {\n        navigate(\"/recipes\")\n    }\n\n    return (\n        <>\n            <NavBar />\n            <Box component=\"div\" style={styles.mainContainer}>\n\n                <Grid container fluid=\"true\" className='text-light' style={{ \"padding\": \"0.8rem\" }}>\n                    <Grid item xs={1}>\n                        <Fab justify=\"left\" onClick={handleBackToRecipes}><ArrowBackIcon /></Fab>\n                    </Grid>\n\n                    <Grid item xs={11}>\n                        <h3>COOKING</h3>\n                        <p>\n                            {recipes.length\n                                ? `Viewing ${recipes.length} selected ${recipes.length === 1 ? 'recipe' : 'recipes'}:`\n                                : 'You have not selected any recipe yet!'}\n                        </p>\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid container style={{ \"justifyContent\": \"center\", \"overflowX\": \"scroll\", \"display\": \"flex\", \"flexDirection\": \"row\" }}>\n                    {recipes.map((recipe, i) => (\n                        <Grid item key={i} xs={4} sm={4} md={4} xl={4} style={{ margin: \"0.2rem\" }} >\n                            <Card style={styles.cardContainer} elevation={8} className=\"cookingRecipe\">\n                                <Box border='dark'>\n                                    <Typography variant=\"h5\" style={styles.green}>\n                                        {recipe.name}\n                                    </Typography>\n                                    <Typography variant=\"h6\" style={styles.wheat}>\n                                        Total Time: {recipe.totalTime} mins\n                                    </Typography>\n                                    <Typography variant=\"h6\" style={styles.wheat}>\n                                        Serves: {recipe.serves}\n                                    </Typography>\n                                    <Grid container style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }}>\n                                        {recipe.image ?\n                                            <CardMedia component=\"img\" image={recipe.image} alt={`The photo for ${recipe.name}`} style={styles.img} /> : null}\n                                        <Card xs={12} sm={6} md={6} xl={6} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\", \"width\": \"50%\" }}>\n                                            <Typography variant=\"h5\">Ingredients:    </Typography>\n                                            <hr style={{ color: \"gray\" }} />\n                                            <Grid style={{ \"overflowY\": \"scroll\" }}>\n\n                                                {recipe.ingredients.map((ingredient, i) => (\n                                                    <Typography key={i}><b>{ingredient.qty}</b>&nbsp;\n                                                        {ingredient.name}</Typography>\n                                                ))}\n\n\n                                            </Grid>\n\n\n                                        </Card>\n                                    </Grid>\n\n                                    {recipe.steps.map((step, i) => (\n\n                                        <Accordion key={i} defaultExpanded={true} style={{ \"textAlign\": \"left\" }} disableGutters={true} TransitionProps={{ unmountOnExit: true }}>\n\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls=\"panel1bh-content\"\n                                                id=\"panel1bh-header\">\n                                                <Typography key={step._id}>\n                                                    Step {i + 1}:\n                                                </Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                <Typography>\n                                                    {step}\n                                                </Typography>\n                                            </AccordionDetails>\n                                        </Accordion>\n\n                                    ))}\n\n                                </Box>\n                                <Box style={{ \"padding\": \"0.8rem\" }}>\n                                    <Fab variant=\"extended\" onClick={() => handleRemoveRecipe(recipe._id)}>\n                                        <RemoveCircleIcon /> Remove this Recipe!</Fab>\n                                </Box>\n\n\n                            </Card>\n                        </Grid>\n\n                    ))}\n                </Grid>\n            </Box>\n\n        </>)\n\n}\n\nexport default Cooking;","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx",["86","87"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { GET_RECIPES } from '../utils/queries';\nimport { SELECT_RECIPE, DELETE_RECIPE } from '../utils/mutations'\nimport { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport NavBar from '../components/NavBar';\nimport { Icon } from '@iconify/react'\nimport { fontFamily } from '../utils/style'\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Recipes() {\n    console.log(\"-------------------------recipe page---------------------------------\")\n    const { loading, data, refetch: refetchRecipes } = useQuery(GET_RECIPES);\n    console.log(\"data\", data)\n    const recipes = data?.getRecipes || [];\n    console.log(\"recipes\", recipes)\n    const [selectRecipe] = useMutation(SELECT_RECIPE);\n    const [deleteRecipe] = useMutation(DELETE_RECIPE);\n    const navigate = useNavigate();\n\n\n    const handleSelectRecipe = async (selectedRecipeId) => {\n        console.log('selectedRecipeId', selectedRecipeId);\n\n        const recipeToSelect = recipes.find((recipe) => recipe._id === selectedRecipeId);\n        const recipeIdToAdd = recipeToSelect._id\n        console.log(\"recipeToSelect\", recipeToSelect)\n        console.log(\"recipeIdToADD\", recipeIdToAdd)\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            console.log('recipeToSelectId---------', recipeToSelect._id)\n            console.log(\"typeof_\", typeof (recipeToSelect._id))\n            console.log(\"recipeId to add: \", recipeIdToAdd)\n            await selectRecipe({ variables: { id: recipeIdToAdd } });\n            console.log('recipeToSelectId---------', recipeIdToAdd)\n\n        } catch (err) {\n            console.error(\"Error in handleSelectRecipe: \", err);\n        }\n    };\n\n    const handleViewRecipe = async (recipeId) => {\n        navigate(`/recipe/${recipeId}`)\n\n    }\n\n    const handleDeleteRecipe = async (recipeId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        if (!token) {\n            return false;\n        }\n        try {\n            await deleteRecipe({\n                variables: { id: recipeId },\n            });\n            await refetchRecipes();\n\n\n        } catch (err) {\n            console.error(err);\n        }\n        if (loading) {\n            return <h2>LOADING...</h2>;\n        }\n    }\n\n    const styles = {\n        mainContainer: {\n            background: \"rgb(32, 33, 36)\",\n            height: \"100%\"\n        },\n        cardContainer: {\n            maxwidth: \"80%\",\n            margin: \"3rem auto\",\n            background: \"inherit\",\n        },\n        wheat: {\n            color: \"wheat\",\n            border: \"none\",\n            fontWeight: \"bold\",\n            fontFamily: fontFamily\n        },\n        green: {\n            color: \"rgba(150, 202, 27, 0.911)\",\n            fontFamily: fontFamily,\n            fontWeight: \"Bold\"\n        },\n        img: {\n            background: \"rgb(32, 33, 36)\",\n            maxwidth: \"100%\",\n            objectFit: \"cover top\"\n        }\n    };\n\n\n\n    return (\n        <>\n            <NavBar />\n            <Box component=\"div\" style={styles.mainContainer}>\n                <h3>RECIPES</h3>\n                <h4 style={styles.green}>\n                    {recipes.length\n                        ? `You have ${recipes.length} ${recipes.length === 1 ? 'recipe' : 'recipes'}:`\n                        : 'You have no recipes!'}\n                </h4>\n                <Grid container justify=\"center\">\n                    {recipes.map((recipe, i) => (\n                        <Grid item xs={6} sm={6} md={4} xl={2} key={recipe._id} >\n                            <Card style={styles.cardContainer} elevation={8} className=\"recipe\">\n                                <CardActionArea onClick={() => handleViewRecipe(recipe._id)}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        alt={`The cover for ${recipe.name}`}\n                                        height=\"300vh\"\n                                        image={recipe.image}\n                                        style={styles.img}\n\n                                    />\n                                    <CardContent>\n                                        <Typography variant=\"h5\" gutterBottom style={styles.green}>\n                                            {recipe.name}\n                                        </Typography>\n                                        <Typography style={styles.wheat}>\n                                            Cooking time: {recipe.totalTime} mins\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                                <CardActions>\n\n                                    <Button variant=\"outlined\" style={styles.wheat} onClick={() => handleSelectRecipe(recipe._id)} startIcon={<Icon icon=\"fluent:select-all-on-20-filled\" />} >Select</Button>\n                                    <Button variant=\"outlined\" style={styles.wheat} onClick={() => handleDeleteRecipe(recipe._id)} startIcon={<Icon icon=\"fluent:delete-24-filled\" />}>Delete</Button>\n\n\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n\n        </>)\n\n}","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/editRecipe.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":7,"column":35,"nodeType":"94","messageId":"95","endLine":7,"endColumn":49},{"ruleId":"92","severity":1,"message":"99","line":7,"column":62,"nodeType":"94","messageId":"95","endLine":7,"endColumn":71},{"ruleId":"92","severity":1,"message":"100","line":7,"column":132,"nodeType":"94","messageId":"95","endLine":7,"endColumn":148},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"101","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'CardActionArea' is defined but never used.","'Container' is defined but never used.","'AccordionActions' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]