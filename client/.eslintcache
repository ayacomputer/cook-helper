[{"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js":"1","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js":"2","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx":"3","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx":"4","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx":"5","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js":"6","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js":"7","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx":"8","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js":"9","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js":"10","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx":"11","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx":"12","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx":"13","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx":"14","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js":"15","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx":"16","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx":"17","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx":"18"},{"size":219,"mtime":1651734237683,"results":"19","hashOfConfig":"20"},{"size":1634,"mtime":1652496727157,"results":"21","hashOfConfig":"20"},{"size":6174,"mtime":1652491301140,"results":"22","hashOfConfig":"20"},{"size":4716,"mtime":1652427682829,"results":"23","hashOfConfig":"20"},{"size":5742,"mtime":1652427506517,"results":"24","hashOfConfig":"20"},{"size":1474,"mtime":1652186762347,"results":"25","hashOfConfig":"20"},{"size":1170,"mtime":1651987516032,"results":"26","hashOfConfig":"20"},{"size":5939,"mtime":1652492702616,"results":"27","hashOfConfig":"20"},{"size":849,"mtime":1652186744061,"results":"28","hashOfConfig":"20"},{"size":891,"mtime":1651996048380,"results":"29","hashOfConfig":"20"},{"size":5615,"mtime":1652494985477,"results":"30","hashOfConfig":"20"},{"size":215,"mtime":1652491301206,"results":"31","hashOfConfig":"20"},{"size":2442,"mtime":1652353959000,"results":"32","hashOfConfig":"20"},{"size":1753,"mtime":1652353738682,"results":"33","hashOfConfig":"20"},{"size":729,"mtime":1652428859172,"results":"34","hashOfConfig":"20"},{"size":5615,"mtime":1652499317565,"results":"35","hashOfConfig":"20"},{"size":5992,"mtime":1652427085757,"results":"36","hashOfConfig":"20"},{"size":1564,"mtime":1652092159278,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rhg1o1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/index.js",[],["79","80"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/App.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/createRecipe.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/login.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/signup.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/mutations.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/auth.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/cooking.jsx",["81","82"],"import React, { useState } from 'react';\n\nimport Auth from '../utils/auth';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME, GET_RECIPES_BY_IDS } from '../utils/queries';\nimport { REMOVE_RECIPE } from '../utils/mutations';\nimport { Button, Box, Grid, Card, CardActionArea, CardMedia, Container, Typography, Accordion, AccordionSummary, AccordionDetails, AccordionActions } from '@mui/material';\nimport NavBar from '../components/NavBar';\nimport { styles } from '../utils/style'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst Cooking = () => {\n    const meData = useQuery(QUERY_ME);\n\n    // const [expanded, setExpanded] = useState(true);\n    // const handleClickStep = (panel) => (event, isExpanded) => {\n    //     console.log(panel)\n    //     console.log(isExpanded)\n    //     setClosed(isExpanded ? panel : false);\n    // };\n\n    const [removeRecipeId] = useMutation(REMOVE_RECIPE);\n    const userData = meData.data?.me || {};\n    const selectedRecipeIds = userData.selectedRecipeIds || [];\n\n    console.log(\"-----selectedRecipesIds : \", selectedRecipeIds)\n    console.log(\"-----userData\", userData)\n\n    let results = useQuery(GET_RECIPES_BY_IDS, { variables: { id: selectedRecipeIds } })\n    let recipes = results?.data?.getRecipesByIds || [];\n\n\n\n    console.log(\"---------recipes:\", recipes)\n    // const errors = meData.error || results.error;\n    const loading = meData.loading || results.loading;\n\n    const handleRemoveRecipe = async (recipeId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            await removeRecipeId({\n                variables: { id: recipeId }\n            });\n\n            await meData.refetch();\n            await results.refetch();\n\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n\n    return (\n        <>\n            <NavBar />\n            <Box component=\"div\" style={styles.mainContainer}>\n                <Container fluid=\"true\" className='text-light bg-dark'>\n                    <Typography justify=\"center\">\n                        Today's Meal\n                    </Typography>\n                    <h4 style={{ \"textAlign\": \"center\" }}>\n                        {recipes.length\n                            ? `Viewing ${recipes.length} selected ${recipes.length === 1 ? 'recipe' : 'recipes'}:`\n                            : 'You have not selected any recipe yet!'}\n                    </h4>\n                </Container>\n                <Grid container direction=\"row\" style={{ \"justifyContent\": \"center\", \"overflowX\": \"scroll\" }}>\n                    {recipes.map((recipe, i) => (\n                        <Grid item key={i} xs={4} sm={4} md={4} xl={4} style={{ margin: \"0.2rem\" }} >\n                            <Card style={styles.cardContainer} elevation={8} className=\"cookingRecipe\">\n                                <CardActionArea border='dark'>\n                                    <Typography variant=\"h5\" style={styles.green}>{recipe.name}</Typography>\n                                    <Typography variant=\"h6\" style={styles.wheat}>Total Time: {recipe.totalTime} mins</Typography>\n                                    <Typography variant=\"h6\" style={styles.wheat}>Serves: {recipe.serves}</Typography>\n                                    <Grid container style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }}>\n                                        {recipe.image ? <CardMedia component=\"img\" image={recipe.image} alt={`The photo for ${recipe.name}`} style={styles.img} /> : null}\n                                        <Card xs={12} sm={6} md={6} xl={6} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\", \"width\": \"50%\" }}>\n                                            <Typography variant=\"h5\">Ingredients: </Typography>\n                                            {recipe.ingredients.map((ingredient, i) => (\n                                                <Typography key={i}><b>{ingredient.qty}</b>  {ingredient.name}</Typography>\n                                            ))}\n                                        </Card>\n                                    </Grid>\n\n\n                                    {recipe.steps.map((step, i) => (\n\n                                        <Accordion key={i} defaultExpanded={true} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }} disableGutters={true} TransitionProps={{ unmountOnExit: true }}>\n\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls=\"panel1bh-content\"\n                                                id=\"panel1bh-header\">\n                                                <Typography key={step._id}>\n                                                    Step {i + 1}:\n                                                </Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                <Typography>\n                                                    {step}\n                                                </Typography>\n                                            </AccordionDetails>\n                                        </Accordion>\n\n                                    ))}\n\n                                </CardActionArea>\n                                <Button className='btn-block btn-danger' onClick={() => handleRemoveRecipe(recipe._id)}>\n                                    Remove this Recipe!\n                                </Button>\n                            </Card>\n                        </Grid>\n\n                    ))}\n                </Grid>\n            </Box>\n\n        </>)\n\n}\n\nexport default Cooking;","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/queries.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/localStorage.js",[],["83","84"],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipes.jsx",["85","86"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { GET_RECIPES } from '../utils/queries';\nimport { SELECT_RECIPE, DELETE_RECIPE } from '../utils/mutations'\nimport { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport NavBar from '../components/NavBar';\nimport { Icon } from '@iconify/react'\nimport { fontFamily } from '../utils/style'\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Recipes() {\n    console.log(\"-------------------------recipe page---------------------------------\")\n    const { loading, data, refetch: refetchRecipes } = useQuery(GET_RECIPES);\n    console.log(\"data\", data)\n    const recipes = data?.getRecipes || [];\n    console.log(\"recipes\", recipes)\n    const [selectRecipe] = useMutation(SELECT_RECIPE);\n    const [deleteRecipe] = useMutation(DELETE_RECIPE);\n    const navigate = useNavigate();\n\n\n    const handleSelectRecipe = async (selectedRecipeId) => {\n        console.log('selectedRecipeId', selectedRecipeId);\n\n        const recipeToSelect = recipes.find((recipe) => recipe._id === selectedRecipeId);\n        const recipeIdToAdd = recipeToSelect._id\n        console.log(\"recipeToSelect\", recipeToSelect)\n        console.log(\"recipeIdToADD\", recipeIdToAdd)\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            console.log('recipeToSelectId---------', recipeToSelect._id)\n            console.log(\"typeof_\", typeof (recipeToSelect._id))\n            console.log(\"recipeId to add: \", recipeIdToAdd)\n            await selectRecipe({ variables: { id: recipeIdToAdd } });\n            console.log('recipeToSelectId---------', recipeIdToAdd)\n\n        } catch (err) {\n            console.error(\"Error in handleSelectRecipe: \", err);\n        }\n    };\n\n    const handleViewRecipe = async (recipeId) => {\n        navigate(`/recipes/${recipeId}`)\n\n    }\n\n    const handleDeleteRecipe = async (recipeId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        if (!token) {\n            return false;\n        }\n        try {\n            await deleteRecipe({\n                variables: { id: recipeId },\n            });\n            await refetchRecipes();\n\n\n        } catch (err) {\n            console.error(err);\n        }\n        if (loading) {\n            return <h2>LOADING...</h2>;\n        }\n    }\n\n    const styles = {\n        mainContainer: {\n            background: \"rgb(32, 33, 36)\",\n            height: \"100%\"\n        },\n        cardContainer: {\n            maxwidth: \"80%\",\n            margin: \"3rem auto\",\n            background: \"inherit\",\n        },\n        wheat: {\n            color: \"wheat\",\n            border: \"none\",\n            fontWeight: \"bold\",\n            fontFamily: fontFamily\n        },\n        green: {\n            color: \"rgba(150, 202, 27, 0.911)\",\n            fontFamily: fontFamily,\n            fontWeight: \"Bold\"\n        },\n        img: {\n            background: \"rgb(32, 33, 36)\",\n            maxwidth: \"100%\",\n            objectFit: \"cover top\"\n        }\n    };\n\n\n\n    return (\n        <>\n            <NavBar />\n            <Box component=\"div\" style={styles.mainContainer}>\n                <h3>RECIPES</h3>\n                <h4 style={styles.green}>\n                    {recipes.length\n                        ? `You have ${recipes.length} ${recipes.length === 1 ? 'recipe' : 'recipes'}:`\n                        : 'You have no recipes!'}\n                </h4>\n                <Grid container justify=\"center\">\n                    {recipes.map((recipe, i) => (\n                        <Grid item xs={6} sm={6} md={4} xl={2} key={recipe._id} >\n                            <Card style={styles.cardContainer} elevation={8} className=\"recipe\">\n                                <CardActionArea onClick={() => handleViewRecipe(recipe._id)}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        alt={`The cover for ${recipe.name}`}\n                                        height=\"300vh\"\n                                        image={recipe.image}\n                                        style={styles.img}\n\n                                    />\n                                    <CardContent>\n                                        <Typography variant=\"h5\" gutterBottom style={styles.green}>\n                                            {recipe.name}\n                                        </Typography>\n                                        <Typography style={styles.wheat}>\n                                            Cooking time: {recipe.totalTime} mins\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                                <CardActions>\n\n                                    <Button variant=\"outlined\" style={styles.wheat} onClick={() => handleSelectRecipe(recipe._id)} startIcon={<Icon icon=\"fluent:select-all-on-20-filled\" />} >Select</Button>\n                                    <Button variant=\"outlined\" style={styles.wheat} onClick={() => handleDeleteRecipe(recipe._id)} startIcon={<Icon icon=\"fluent:delete-24-filled\" />}>Delete</Button>\n\n\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n\n        </>)\n\n}","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/layouts/MainLayout.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/ingredientForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/stepsForm.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/utils/style.js",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/pages/recipe.jsx",["87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { GET_ONE_RECIPE } from '../utils/queries';\nimport { DELETE_RECIPE } from '../utils/mutations'\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport NavBar from '../components/NavBar';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useNavigate } from 'react-router-dom';\nimport { Fab } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\n\n\n\nexport default function Recipe() {\n    console.log(\"-------------------------viewing single recipe page---------------------------------\")\n    const { _id } = useParams();\n    const navigate = useNavigate();\n    console.log(\"param is:\", _id)\n    const { loading, data, refetch: refetchRecipe } = useQuery(GET_ONE_RECIPE,\n        { variables: { id: _id } });\n\n\n    console.log(\"data\", data)\n\n\n    const selectedRecipe = data?.getOneRecipe || {};\n    console.log(\"selectedRecipe\", selectedRecipe)\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    const fontFamily = [\n        'Nunito',\n        'Comforter',\n        'Roboto'\n    ].join(',');\n\n    const styles = {\n        mainContainer: {\n            background: \"rgb(32, 33, 36)\",\n            height: \"100%\"\n        },\n        cardContainer: {\n            maxWidth: \"80%\",\n            margin: \"3rem auto\",\n            background: \"inherit\",\n        },\n        wheat: {\n            color: \"wheat\",\n            border: \"none\",\n            fontWeight: \"bold\",\n            fontFamily: fontFamily\n        },\n        green: {\n            color: \"rgba(150, 202, 27, 0.911)\",\n            fontFamily: fontFamily,\n            fontWeight: \"Bold\"\n        },\n        img: {\n            background: \"rgb(32, 33, 36)\",\n            maxWidth: \"100%\",\n            objectFit: \"cover top\"\n        }\n    };\n\n    const handleEditRecipe = (selectedRecipeId) => {\n        navigate(`/recipes/${selectedRecipeId}/edit`)\n\n    }\n    const handleBackToRecipes = () => {\n        navigate(\"/recipes\")\n    }\n    return (\n        <>\n\n            <NavBar />\n            <Grid container justify=\"center\">\n                <Fab onClick={handleBackToRecipes}><ArrowBackIcon /></Fab>\n\n\n                <Grid style={{ \"justifyContent\": \"center\" }}>\n                    <Card style={styles.cardContainer} elevation={8} className=\"cookingRecipe\">\n                        <Box xs={12} sm={6} md={6} xl={6}>\n                            <Typography variant=\"h5\" style={styles.green}>{selectedRecipe.name}</Typography>\n                            <Typography variant=\"h6\" style={styles.wheat}>Total Time: {selectedRecipe.totalTime} mins</Typography>\n                            <Typography variant=\"h6\" style={styles.wheat}>Serves: {selectedRecipe.serves}</Typography>\n                        </Box>\n                        <Grid container direction=\"row\" xs={12} sm={12} md={12} xl={12} style={{ margin: \"0.2rem\" }} >\n\n                            <Grid xs={12} sm={6} md={6} xl={6} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }}>\n                                {selectedRecipe.image ? <CardMedia component=\"img\" image={selectedRecipe.image} alt={`The photo for ${selectedRecipe.name}`} style={styles.img} /> : null}\n                            </Grid>\n                            <Grid xs={12} sm={6} md={6} xl={6}>\n                                <Card xs={12} sm={12} md={12} xl={12} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }}>\n                                    <Typography variant=\"h5\">Ingredients: </Typography>\n                                    {selectedRecipe.ingredients.map((ingredient, i) => (\n                                        <Typography key={i}><b>{ingredient.qty}</b>  {ingredient.name}</Typography>\n                                    ))}\n                                </Card>\n\n                                {selectedRecipe.steps.map((step, i) => (\n\n                                    <Accordion key={i} defaultExpanded={true} style={{ \"textAlign\": \"left\", \"padding\": \"0.2em\" }} disableGutters={true} TransitionProps={{ unmountOnExit: true }}>\n\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1bh-content\"\n                                            id=\"panel1bh-header\">\n                                            <Typography key={step._id}>\n                                                Step {i + 1}:\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            <Typography>\n                                                {step}\n                                            </Typography>\n                                        </AccordionDetails>\n                                    </Accordion>\n\n                                ))}\n\n                            </Grid>\n\n                            <Fab variant=\"extended\" onClick={() => handleEditRecipe(selectedRecipe._id)}><EditIcon sx={{ mr: 1 }} />\n                                Edit\n                            </Fab>\n                        </Grid>\n                    </Card>\n\n\n                </Grid>\n\n            </Grid>\n        </>)\n\n}","/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/NavBar.jsx",[],"/Users/ayakowoollan/development/homeworkRepo/cook-helper/client/src/components/Footer.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":7,"column":132,"nodeType":"103","messageId":"104","endLine":7,"endColumn":148},{"ruleId":"97","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"109","line":2,"column":20,"nodeType":"103","messageId":"104","endLine":2,"endColumn":31},{"ruleId":"101","severity":1,"message":"110","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":18},{"ruleId":"101","severity":1,"message":"111","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":23},{"ruleId":"101","severity":1,"message":"112","line":6,"column":62,"nodeType":"103","messageId":"104","endLine":6,"endColumn":68},{"ruleId":"101","severity":1,"message":"113","line":6,"column":76,"nodeType":"103","messageId":"104","endLine":6,"endColumn":90},{"ruleId":"101","severity":1,"message":"114","line":6,"column":92,"nodeType":"103","messageId":"104","endLine":6,"endColumn":103},{"ruleId":"101","severity":1,"message":"115","line":6,"column":105,"nodeType":"103","messageId":"104","endLine":6,"endColumn":116},{"ruleId":"101","severity":1,"message":"116","line":21,"column":37,"nodeType":"103","messageId":"104","endLine":21,"endColumn":50},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AccordionActions' is defined but never used.",["117"],["118"],"'useEffect' is defined but never used.","'useMutation' is defined but never used.","'Navigate' is defined but never used.","'DELETE_RECIPE' is defined but never used.","'Button' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'refetchRecipe' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]